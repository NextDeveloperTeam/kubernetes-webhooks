# apiVersion: v1
# kind: Namespace
# metadata:
#   labels:
#     docker-proxy-webhook: disabled
#   name: pod-rate-limiter
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: pod-rate-limiter-certificate
  namespace: kube-system
spec:
  secretName: pod-rate-limiter-certificate
  duration: 8760h # 365d
  renewBefore: 360h # 15d
  subject:
    organizations:
      - nexttrucking
  isCA: false
  privateKey:
    size: 2048
    algorithm: RSA
    encoding: PKCS8
  usages:
    - server auth
    - client auth
  dnsNames:
    - pod-rate-limiter.kube-system.svc
  issuerRef:
    name: ca-cluster-issuer
    kind: ClusterIssuer
    group: cert-manager.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pod-rate-limiter
  name: pod-rate-limiter
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pod-rate-limiter
  template:
    metadata:
      labels:
        app: pod-rate-limiter
    spec:
      # affinity:
      #   podAntiAffinity:
      #     # do not schedule on the same node to avoid `hostNetwork` port conflicts
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #     - topologyKey: "kubernetes.io/hostname"
      #       labelSelector:
      #         matchExpressions:
      #         - key: app
      #           operator: In
      #           values:
      #             - pod-rate-limiter
      containers:
        - name: pod-rate-limiter
          #command: ["bash", "-c", "cat /tmp/k8s-webhook-server/serving-certs/tls.key"]
          # args:
          #   - -metrics-addr=:18080
          #   - -health-addr=:18081
          #   - -listen-port=19443
          env:
            - name: RUST_BACKTRACE
              value: "FULL"
          image: pod-rate-limiter:12 #123456789012.dkr.ecr.us-east-1.amazonaws.com/registry/docker-proxy
          imagePullPolicy: Never # ALways
          # Graceful shutdown hack - sleep 15 seconds to give the k8s network
          # config time to update and stop routing new requests to this pod.
          # lifecycle:
          #   preStop:
          #     exec:
          #       command:
          #         - /bin/sh
          #         - -c
          #         - sleep 15
          ports:
            - containerPort: 8080
              protocol: TCP
              name: http
            - containerPort: 8443
              protocol: TCP
              name: https
          #     name: https
          #   - containerPort: 18080
          #     protocol: TCP
          #     name: metrics
          #   - containerPort: 18081
          #     protocol: TCP
          #     name: monitoring
#          resources:
#            requests:
#              memory: $REQUESTS_MEMORY
#              cpu: $REQUESTS_CPU
#            limits:
#              memory: $LIMITS_MEMORY
#              cpu: $LIMITS_CPU
          # livenessProbe:
          #   httpGet:
          #     path: /healthz
          #     port: monitoring
          #   initialDelaySeconds: 10
          #   timeoutSeconds: 5
          # readinessProbe:
          #   httpGet:
          #     path: /readyz
          #     port: monitoring
          #   successThreshold: 1
          #   failureThreshold: 2
          #   periodSeconds: 5
          #   timeoutSeconds: 5
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
          #   - mountPath: /tmp/config
          #     name: docker-proxy-config
          #     readOnly: true
      #hostNetwork: true
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: pod-rate-limiter-certificate
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: pod-rate-limiter
  name: pod-rate-limiter
  namespace: kube-system
spec:
  ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
    # - name: metrics
    #   port: 8080
    #   protocol: TCP
    #   targetPort: metrics
    # - name: monitoring
    #   port: 8081
    #   protocol: TCP
    #   targetPort: monitoring
  selector:
    app: pod-rate-limiter
  type: ClusterIP
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: pod-rate-limiter
  namespace: kube-system
  annotations:
    cert-manager.io/inject-ca-from: kube-system/pod-rate-limiter-certificate
webhooks:
  - name: pod-rate-limiter.nexttrucking.com
    namespaceSelector:
      matchExpressions:
        - key: pod-rate-limiter
          operator: In
          values:
            - enabled
    rules:
      - apiGroups:   [""]
        apiVersions: ["v1"]
        operations:  ["CREATE"]
        resources:   ["pods"]
        scope:       "*"
    clientConfig:
      service:
        namespace: kube-system
        name: pod-rate-limiter
        path: /mutate
        port: 443
    admissionReviewVersions: ["v1"]
    sideEffects: None
    matchPolicy: Equivalent
    reinvocationPolicy: IfNeeded
# ---
# apiVersion: monitoring.coreos.com/v1
# kind: ServiceMonitor
# metadata:
#   labels:
#     app: pod-rate-limiter
#   name: pod-rate-limiter
#   namespace: kube-system
# spec:
#   endpoints:
#   - port: metrics
#   selector:
#     matchLabels:
#       app: pod-rate-limiter
#   namespaceSelector:
#     matchNames:
#     - kube-system